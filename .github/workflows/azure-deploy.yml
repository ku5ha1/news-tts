name: Build and Deploy to Azure ML

on:
  push:
    branches:
      - main  

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env:
      # Non-sensitive defaults
      HF_HOME: /app/.cache/huggingface
      HF_HUB_CACHE: /app/.cache/huggingface/hub
      TRANSFORMERS_CACHE: /app/.cache/huggingface/transformers
      HF_HUB_OFFLINE: 0
      TRUST_REMOTE_CODE: 1
      TRANSLATION_PER_CALL_TIMEOUT: 90
      TRANSLATION_PER_CALL_TIMEOUT_RETRY: 120
      LOG_LEVEL: INFO

      # Secrets from GitHub repository
      AZURE_CREDENTIALS: ${{ secrets.AZURE_CREDENTIALS }}
      DATABASE_NAME: ${{ secrets.DATABASE_NAME }}
      ELEVENLABS_API_KEY: ${{ secrets.ELEVENLABS_API_KEY }}
      ELEVENLABS_VOICE_ID: ${{ secrets.ELEVENLABS_VOICE_ID }}
      FIREBASE_SERVICE_ACCOUNT_BASE64: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_BASE64 }}
      FIREBASE_STORAGE_BUCKET: ${{ secrets.FIREBASE_STORAGE_BUCKET }}
      MONGO_URI: ${{ secrets.MONGO_URI }}
      RESOURCE_GROUP: ${{ secrets.RESOURCE_GROUP }}
      CORS_ORIGIN: ${{ secrets.CORS_ORIGIN }}
      ML_WORKSPACE_NAME: ${{ secrets.ML_WORKSPACE_NAME }}
      ML_ENDPOINT_NAME: ${{ secrets.ML_ENDPOINT_NAME }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Login to Azure
        uses: azure/login@v2
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Install Azure ML CLI extension
        run: |
          az extension add -n ml
          az extension update -n ml

      - name: Deploy to Azure ML Managed Endpoint
        run: |
          az ml online-endpoint create \
            --name "$ML_ENDPOINT_NAME" \
            --resource-group "$RESOURCE_GROUP" \
            --workspace-name "$ML_WORKSPACE_NAME" \
            --file deployment_config.yaml

      - name: Get endpoint URL
        run: |
          ENDPOINT_URL=$(az ml online-endpoint show \
            --name "$ML_ENDPOINT_NAME" \
            --resource-group "$RESOURCE_GROUP" \
            --workspace-name "$ML_WORKSPACE_NAME" \
            --query scoring_uri -o tsv)
          echo "Endpoint URL: $ENDPOINT_URL"
          echo "ENDPOINT_URL=$ENDPOINT_URL" >> $GITHUB_ENV